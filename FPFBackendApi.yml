openapi: 3.0.3
info:
  title: Swagger Farminsight FPF Backend - OpenAPI 3.0
  description: |-
    Endpoints that the FPF Backend Service provides for synchronization purposes
  termsOfService: TOS
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://anants-pi-cluster.de/api
tags:
  - name: sync
    description: Synchronization for Sensor and Camera configuration
  - name: sensor
  - name: camera
paths:
  /synchronize/fpfId:
    post:
      tags:
        - sync
      summary: Upload FPF Id
      operationId: postFPFId
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: uuid
      responses:
        '200':
          description: Successful operation
  /ping:
    get:
      tags:
        - sync
      operationId: getPing
      description: A ping feature to test from the frontend if the Backend to FPF connection exists, in case there are no recent data points for some reason, could be used for some more finegrained debugging/connection status
      responses:
        '200':
          description: Successful operation
  /sensors/synchronize:
    post:
      tags:
        - sensor
      summary: Upload sensor configuration for synchronization
      operationId: postSensorConfiguration
      requestBody:
        description: Array of Sensors
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Sensor'
      responses:
        '200':
          description: Successful operation
        '404':
          description: Sensor not found
        '422':
          description: Validation exception
  /sensors/measurementInterval:
    post:
      tags:
        - sensor
      summary: Upload new sensor interval
      description: Uploads new measurement interval of Sensor
      operationId: postSensorInterval
      requestBody:
        description: Sensor measurement interval in seconds
        content:
          application/json:
            schema:
              type: object
              properties:
                sensorId:
                  description: ID of Sensor that the Interval belong to
                  type: string
                  format: uuid
                intervalInSeconds:
                  description: Interval in which Sensor Measurements should be taken
                  type: integer
      responses:
        '200':
          description: Successful operation
        '404':
          description: Sensor not found
        '422':
          description: Validation exception
  /cameras/synchronize:
    post:
      tags:
        - camera
      summary: Upload Camera configuration for synchronization
      operationId: postCameraConfiguration
      requestBody:
        description: Array of Cameras
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Camera'
      responses:
        '200':
          description: Successful operation
        '404':
          description: Camera not found
        '422':
          description: Validation exception
  /cameras/imageInterval:
    post:
      tags:
        - camera
      summary: Upload new camera interval
      description: Uploads image interval of Camera
      operationId: postCameraInterval
      requestBody:
        description: Camera image interval in seconds
        content:
          application/json:
            schema:
              type: object
              properties:
                cameraId:
                  description: ID of Camera that the Interval belong to
                  type: string
                  format: uuid
                intervalInSeconds:
                  description: Interval in which Camera images should be sent to Backend
                  type: integer
      responses:
        '200':
          description: Successful operation
        '404':
          description: Camera not found
        '422':
          description: Validation exception
  /cameras/stream/{cameraId}:
    get:
      tags:
        - camera
      summary: Video stream of a Camera
      parameters:
        - name: cameraId
          in: path
          description: ID of Camera that the Interval belong to
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
        '404':
          description: Camera not found
components:
  schemas:
    Sensor:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        location:
          type: string
        unit:
          type: string
          enum:
            - °C
            - °F
            - kg
        modelNr:
          type: string
        isActive:
          type: boolean
        intervalSeconds:
          type: integer
    Camera:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        location:
          type: string
        modelNr:
          type: string
        resolution:
          type: string
        isActive:
          type: boolean
        intervalSeconds:
          type: integer